{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{388:function(e,t,n){\"use strict\";n.r(t);var a=n(45),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"跨域\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跨域\"}},[e._v(\"#\")]),e._v(\" 跨域\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"前言\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[e._v(\"#\")]),e._v(\" 前言\")]),e._v(\" \"),n(\"p\",[e._v(\"从“跨域”这个词开始，去理清跨域这个知识点，途径同源策略，跨过document.domain，window.postMessage，JSONP，CORS等，先放若干个问题，希望看完文章的你可以答上来。\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"能说说跨域吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"能说说同源策略吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"为什么要同源策略，它限制了什么？\")]),e._v(\" \"),n(\"li\",[e._v(\"你知道哪些跨域方案呢？\")]),e._v(\" \"),n(\"li\",[e._v(\"有关cookie的跨域怎么实现？\")]),e._v(\" \"),n(\"li\",[e._v(\"能具体说说JSONP吗？返回什么数据呢，前端怎么处理呢？知道什么原理吗？实现过吗？JSONP服务器端实现过吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"postMessage 了解吗？怎么使用？需要注意什么？（安全方面）\")]),e._v(\" \"),n(\"li\",[e._v(\"代理了解过吗？用过哪些代理方案呢不？怎么在项目中用呢？\")]),e._v(\" \"),n(\"li\",[e._v(\"cors可以具体说一个简单请求和非简单请求吗？具体过程说一下？项目中怎么使用？\")])]),e._v(\" \"),n(\"p\",[e._v(\"文章可能有些地方写的不当和不全的地方，欢迎评论区给我建议，感谢~~ 🤞🤞🤞\\n也希望里面的知识点有哪里不清楚的，你可以自己可以花时间去整明白更好，加油呀😊\\n这次就不放导图啦，右边目录很清楚~~\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"_1、讲一下跨域是什么\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、讲一下跨域是什么\"}},[e._v(\"#\")]),e._v(\" 1、讲一下跨域是什么？\")]),e._v(\" \"),n(\"p\",[e._v(\"一个源加载的文档或者脚本和来自另一个源的文档和脚本等资源进行交互（也就是不满足同源策略的两个源之间进行一些交互），就是跨域。\\n所以你需要清楚的是同源策略是什么？它为什么出现？它又限制了什么？  往下看吧：\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"_2、同源策略\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、同源策略\"}},[e._v(\"#\")]),e._v(\" 2、同源策略\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_2-1、-同源策略是什么\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1、-同源策略是什么\"}},[e._v(\"#\")]),e._v(\" 2.1、 同源策略是什么？\")]),e._v(\" \"),n(\"p\",[e._v('所谓\"同源\"指的是\"三个相同\"。')]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"协议相同\")]),e._v(\" \"),n(\"li\",[e._v(\"域名相同\")]),e._v(\" \"),n(\"li\",[e._v(\"端口相同\")])]),e._v(\" \"),n(\"p\",[e._v(\"举个栗子:\\n\"),n(\"code\",[e._v(\"[http://www.jingda.com/dir/page.html](http://www.jingda.com/dir/page.html)\")]),e._v(\"这个网址，协议是\"),n(\"code\",[e._v(\"http://\")]),e._v(\"，域名是\"),n(\"code\",[e._v(\"www.jingda.com\")]),e._v(\"，端口是80（默认端口可以省略）。来看看下面改编的哪些是同源哪些是不同源：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[n(\"code\",[e._v(\"[http://www.jingda.com/dir2/other.html](http://www.jingda.com/dir2/other.html)\")]),e._v(\"：同源\")]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"[http://jingda1.com/dir/other.html](http://jingda1.com/dir/other.html)\")]),e._v(\"：不同源（域名不同）\")]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"[http://v2.www.jingda.com/dir/other.html](http://v2.www.jingda.com/dir/other.html)\")]),e._v(\"：不同源（域名不同）\")]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"[http://www.jingda.com:81/dir/other.html](http://www.jingda.com:81/dir/other.html)\")]),e._v(\"：不同源（端口不同）\")]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"[https://www.jingda.com/dir/page.html](https://www.jingda.com/dir/page.html)\")]),e._v(\"：不同源（协议不同）\")])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_2-2、-为什么需要同源策略\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2、-为什么需要同源策略\"}},[e._v(\"#\")]),e._v(\" 2.2、 为什么需要同源策略？\")]),e._v(\" \"),n(\"p\",[e._v(\"同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。它能帮助阻隔恶意文档，减少可能被攻击的媒介。 假设小明同学在A银行的官网进行了登录，之后他又去浏览了其他网站，如果其他网站可以读取A银行官网的cookie，那么小明在A银行的登录信息和其他存款记录等都会被泄露，将是一件非常危险的情况。\\n而cookie的访问限制只是同源策略限制的一种情况，下面我们介绍一下其他的。\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_2-3、-同源策略带来了什么访问限制\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3、-同源策略带来了什么访问限制\"}},[e._v(\"#\")]),e._v(\" 2.3、 同源策略带来了什么访问限制？\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"跨源数据存储访问：访问存储在浏览器中的数据，如 localStorage 和 IndexedDB，是以源进行分割；Cookies  使用不同的源定义方式。每个源都拥有自己单独的存储空间，一个源中的 JavaScript 脚本不能对属于其它源的数据进行读写操作。\")]),e._v(\" \"),n(\"li\",[e._v(\"跨源脚本API访问：JavaScript 的 API 中，如 iframe.contentWindow、 window.parent、window.open 和 window.opener 允许文档间直接相互引用。当两个文档的源不同时，这些引用方式将对 Window 和 Location对象的访问添加限制，\")]),e._v(\" \"),n(\"li\",[e._v(\"跨源网络访问：同源策略控制不同源之间的交互，例如在使用XMLHttpRequest 或  标签时则会受到同源策略的约束。\")])]),e._v(\" \"),n(\"h2\",{attrs:{id:\"_3、解决跨域的几种方法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、解决跨域的几种方法\"}},[e._v(\"#\")]),e._v(\" 3、解决跨域的几种方法？\")]),e._v(\" \"),n(\"p\",[e._v(\"将上面三种访问限制简化成下面的三种表达：\\n（1） Cookie、LocalStorage 和 IndexDB 无法读取。\\n（2） JavaScript 的 API 中的一些引用，无法获得。（详见上）\\n（3） AJAX  请求不能发送。（也就是无法使用XMLHttpRequest）\\n（因为在网上有关跨域的解决方案，可能是比较多，但这里我是根据上面三种限制依次介绍一下可能行得通的解决方案）\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_3-1、-cookie-document-domain\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1、-cookie-document-domain\"}},[e._v(\"#\")]),e._v(\" 3.1、 cookie -- document.domain\")]),e._v(\" \"),n(\"p\",[e._v(\"当我们尝试解决因同源策略下，无法访问cookie这种情况时，我们可以借助：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"1、\"),n(\"code\",[e._v(\"浏览器允许通过设置document.domain共享 Cookie。\")]),e._v(\"来达成效果。但是，\"),n(\"code\",[e._v(\"两个网页一级域名相同，只是二级域名不同\")]),e._v(\"才可以设置，那什么是一级域名，什么是二级域名呢？\")])]),e._v(\" \"),n(\"p\",[e._v(\"举个栗子： A网页：\"),n(\"code\",[e._v(\"[http://w1.jingda.com/a.html](http://w1.jingda.com/a.html)\")]),e._v(\"在这个网页地址中，\"),n(\"code\",[e._v(\"w1.jingda.com\")]),e._v(\"这部分统称为域名，\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"一级域名是由一个合法的字符串+域名后缀组成，所以，jingda.com这种形式的域名才是一级域名，jingda是域名主体，.com、.net也是域名后缀。\")]),e._v(\" \"),n(\"li\",[e._v(\"二级域名实际就是一级域名下面的主机名，顾名思义，\"),n(\"code\",[e._v(\"它是在一级域名前面加上一个字符串\")]),e._v(\"，比如w1.jingda.com，\")])]),e._v(\" \"),n(\"p\",[e._v(\"解释完怎样的情况可以设置document.domain共享 Cookie，让我们看看一个如何操作：\\n假设有两个网页地址，我们可以看到，他们的一级域名是相同的，二级域名的不同的：\\nA网页：\"),n(\"code\",[e._v(\"[http://w1.jingda.com/a.html](http://w1.jingda.com/a.html)\")]),e._v(\"\\nB网页：\"),n(\"code\",[e._v(\"[http://w2.jingda.com/b.html](http://w2.jingda.com/b.html)\")]),e._v(\"\\n那么只要设置相同的document.domain，两个网页就可以共享Cookie。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"document.domain = 'example.com';\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"A网页通过脚本设置一个 Cookie。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('document.cookie = \"test1=hello\";\\n复制代码\\n')])])]),n(\"p\",[e._v(\"B网页就可以读到这个 Cookie。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"var allCookie = document.cookie;\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"2、服务器也可以在设置Cookie的时候，指定Cookie的所属域名为一级域名，比如.example.com。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"Set-Cookie: key=value; domain=.example.com; path=/\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"这样的话，二级域名和三级域名不用做任何设置，都可以读取这个Cookie。\\n这里的话，补充一下设置cookie的时候，一些其他的设置来限定其可访问性：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"Domain 和 Path 标识定义了Cookie的作用域：即允许 Cookie 应该发送给哪些URL。\")]),e._v(\" \"),n(\"li\",[e._v(\"Secure：Secure属性是说如果一个cookie被设置了Secure=true，那么这个cookie只能用https协议发送给服务器，用http协议是不发送的。\")]),e._v(\" \"),n(\"li\",[e._v(\"HttpOnly ：使用 HttpOnly 属性可防止通过 JavaScript 访问 cookie 值\")]),e._v(\" \"),n(\"li\",[e._v(\"SameSite Cookie 允许服务器要求某个 cookie 在跨站请求时不会被发送，从而可以阻止跨站请求伪造攻击（CSRF）。\")])]),e._v(\" \"),n(\"p\",[e._v(\"你应该注意到，这里我们只是单单解决了在有一些限制条件下的\"),n(\"code\",[e._v(\"访问cookie\")]),e._v(\"的限制。但是上面还提到的\"),n(\"code\",[e._v(\"LocalStorage 和 IndexDB\")]),e._v(\"暂时还没有解决。(等下再说)\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_3-2、-api访问-window-postmessage\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2、-api访问-window-postmessage\"}},[e._v(\"#\")]),e._v(\" 3.2、 API访问 --  window.postMessage\")]),e._v(\" \"),n(\"p\",[e._v(\"postMessage是html5新增的一个解决跨域的一个方法，为了能让不同源中文档进行交流，可以使用 window.postMessage安全地实现跨源通信。（安全是指在正确的使用情况下），这\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-2-1、window-postmessage的使用场景\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-1、window-postmessage的使用场景\"}},[e._v(\"#\")]),e._v(\" 3.2.1、window.postMessage的使用场景？\")]),e._v(\" \"),n(\"p\",[e._v(\"个我自己也是没有用过的。使用方法大家可以参考这篇\"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_40650646%2Farticle%2Fdetails%2F81777398%3Futm_medium%3Ddistribute.pc_relevant.none-task-blog-2%257Edefault%257EBlogCommendFromBaidu%257Edefault-7.control%26dist_request_id%3D1328769.70653.16176908362791735%26depth_1-utm_source%3Ddistribute.pc_relevant.none-task-blog-2%257Edefault%257EBlogCommendFromBaidu%257Edefault-7.control\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"window.postMessage用法\"),n(\"OutboundLink\")],1),e._v(\"一个比较小的案例\\n因为是两个窗口页面之间的通信，因此我们这边假设我两个页面，A,B，目的是在B窗口中点击postMessage按钮，能够在A页面收到发来的消息。 A页面：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"<script>\\n  function test() {\\n    let op = window.open('b.html', '_blank'); \\n    function receiveMessage(event) {\\n      console.log('event', event);\\n    }\\n    op.addEventListener(\\\"message\\\", receiveMessage, false); \\n  }\\n<\\/script>\\n<body>\\n  <div>\\n    <button onClick=\\\"test()\\\">open</button>\\n  </div>\\n</body>\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"B页面：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('<script>\\n  function post() {\\n    window.postMessage(\"hi there!\", location.origin);\\n  }\\n  function receiveMessage(event) {\\n    console.log(\\'event\\', event)\\n  }\\n  window.addEventListener(\"message\", receiveMessage, false);\\n<\\/script>\\n<body>\\n  <div>\\n    <button onClick=\"post()\">postMessage</button>\\n  </div>\\n</body>\\n复制代码\\n')])])]),n(\"p\",[e._v(\"我就直接说一下大概的思路了： 首先看看B页面：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"在B页面有一个按钮，点击这个按钮会触发一个方法，post()\")]),e._v(\" \"),n(\"li\",[e._v('在post()方法中，window.postMessage(\"hi there!\", location.origin)，发送到所有同源的窗口，注意，当前窗口也会收到')]),e._v(\" \"),n(\"li\",[e._v('之后通过 window.addEventListener(\"message\", receiveMessage, false)去监听，如果有数据，就执行receiveMessage(),把数据打印出来')])]),e._v(\" \"),n(\"p\",[e._v(\"再来看A页面：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"在A页面也有一个按钮，当点击这个按钮时触发test()\")]),e._v(\" \"),n(\"li\",[e._v(\"打开新窗口，并建立窗口的引用变量op = window.open('B.html', '_blank');\")]),e._v(\" \"),n(\"li\",[e._v('op.addEventListener(\"message\", receiveMessage, false); 监听新开窗口发来的消息,通过 receiveMessage() 把数据打印出来')])]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-2-2、如何正确的使用-以保证安全性\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-2、如何正确的使用-以保证安全性\"}},[e._v(\"#\")]),e._v(\" 3.2.2、如何正确的使用，以保证安全性？\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"始终使用origin和source属性验证发件人的身份,没有验证origin和source属性会导致跨站点脚本攻击。\")]),e._v(\" \"),n(\"li\",[e._v(\"当使用postMessage将数据发送到其他窗口时，指定精确的目标origin，而不是*\")])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_3-3、jsonp\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3、jsonp\"}},[e._v(\"#\")]),e._v(\" 3.3、JSONP\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v(\"JSONP(JSON with Padding)是JSON的一种“使用模式”，可用于解决主流浏览器的跨域数据访问的问题。\")])]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-3-1、jsonp的介绍\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-1、jsonp的介绍\"}},[e._v(\"#\")]),e._v(\" 3.3.1、JSONP的介绍\")]),e._v(\" \"),n(\"p\",[e._v(\"JSONP 是通过在\"),n(\"code\",[e._v(\"<script></srcipt>\")]),e._v(\"标签里，通过src，img，href 属性的跨域方式向一个不同源的网站地址发送http请求，并且使得json数据可以在javascript代码中能够使用。\\n它规避了javascript代码中的跨源网络访问，也就是无法使用XMLHttpRequest，fetch被同源机制管到了（如果不同源的话）。\\n提前准备一个接口：\"),n(\"code\",[e._v(\"[https://photo.sina.cn/aj/index?page=1&cate=recommend](https://photo.sina.cn/aj/index?page=1&cate=recommend)\")]),e._v(\"直接网页中打开，我们是可以看到有很多数据的，如下图：\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525368-cddc3ff7-c4ae-43dd-9454-362c23db8c51.png#align=left&display=inline&height=338&margin=%5Bobject%20Object%5D&originHeight=338&originWidth=738&size=0&status=done&style=none&width=738\",alt:\"\"}}),e._v(\"\\n让我们尝试在本地请求一下这个地址，看看能不能拿到数据：因为双方地址并不是同源的，因此这样请求会报跨域的错：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"<body>\\n   <script>\\n        fetch('https://photo.sina.cn/aj/index?page=1&cate=recommend')\\n            .then(data=>{\\n                console.log(data);\\n                \\n            })\\n    <\\/script>\\n</body>\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"通过 live-server打开浏览器，在控制台可以看到报错了，因为这个是一个跨域的请求：\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525536-5b038751-0566-4344-8aa9-4a18e20c5b0d.png#align=left&display=inline&height=176&margin=%5Bobject%20Object%5D&originHeight=176&originWidth=661&size=0&status=done&style=none&width=661\",alt:\"\"}}),e._v(\"\\n接下来我们来看看JSONP如何解决这个问题：\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-3-2、jsonp-如何使用-原理是什么-返回数据格式-前端怎么处理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-2、jsonp-如何使用-原理是什么-返回数据格式-前端怎么处理\"}},[e._v(\"#\")]),e._v(\" 3.3.2、jsonp 如何使用？原理是什么？返回数据格式？前端怎么处理？\")]),e._v(\" \"),n(\"p\",[e._v(\"还是请求上面的这个网站地址，我们把代码改成下面这样：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('<body>\\n  <script>\\n    function callback(data){\\n        console.log(data);\\n    }\\n<\\/script>\\n<script src=\"https://photo.sina.cn/aj/index?page=1&cate=recommend&callback=callback\"><\\/script>  \\n</body>\\n复制代码\\n')])])]),n(\"p\",[e._v(\"再来看看页面控制台输出：\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525347-2c00c41b-f2cb-400b-8f93-943033df2258.png#align=left&display=inline&height=164&margin=%5Bobject%20Object%5D&originHeight=164&originWidth=435&size=0&status=done&style=none&width=435\",alt:\"\"}}),e._v(\"\\ndata成功取到了。但是我们的数据到达之后是json数据，不能直接使用，script标签是一个加载资源的标签，它并不能直接运行这个代码。\\n事实上我们是在访问的时候，在请求的地址后面加上一个，\"),n(\"code\",[e._v(\"&callback=callback\")]),e._v(\"，通知服务器，本地想进行一个跨资源访问（以JSOP的形式进行跨域）。等号后面的\"),n(\"code\",[e._v(\"callback\")]),e._v(\"是一个你自己定义的函数，名字可自取，这个函数就是，通知我需要请求的地址，这边页面上我有一个函数，它会等待调用，用来执行你发过来的数据（也就是可以去执行把数据请求下来的操作）。\\n因此在数据到达之后，还包了一层函数 \"),n(\"code\",[e._v(\"callback({data})\")]),e._v(\"，当数据通过script标签请求下来之后，再通过\"),n(\"code\",[e._v(\"callback\")]),e._v(\"实现了一个调用本地资源的能力。\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525344-33e331c3-8492-4f88-ae69-3b4b0cc40788.png#align=left&display=inline&height=299&margin=%5Bobject%20Object%5D&originHeight=299&originWidth=918&size=0&status=done&style=none&width=918\",alt:\"\"}}),e._v(\"\\n最后再理一下这部分的内容：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"JSONP的原理\")])]),e._v(\" \"),n(\"p\",[e._v(\"script标签请求数据，在请求的地址后面加上一个，\"),n(\"code\",[e._v(\"&callback=callback\")]),e._v(\"，请求的服务器就在json数据外面包一层callback函数，当这个带有数据的callback函数可以在script得到之后可以运行的函数：\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525514-3373e359-bea5-4f9e-bd8b-e21fa3f0d033.png#align=left&display=inline&height=214&margin=%5Bobject%20Object%5D&originHeight=214&originWidth=1204&size=0&status=done&style=none&width=1204\",alt:\"\"}})]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"返回的数据格式\")])]),e._v(\" \"),n(\"p\",[e._v(\"JSON\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"以及前端如何处理的\")])]),e._v(\" \"),n(\"p\",[e._v(\"JSON with padding --- \"),n(\"code\",[e._v(\"callback({data})\")])]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-3-3、自己封装一个jsonp\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-3、自己封装一个jsonp\"}},[e._v(\"#\")]),e._v(\" 3.3.3、自己封装一个jsonp？\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"准备工作\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"<script>\\n    let jsonp = () => {\\n    }\\n    jsonp('https://photo.sina.cn/aj/index', {\\n      page: 1,\\n      cate: 'recommend'\\n    })\\n    .then(response => {\\n      console.log(response,'调用成功啦');\\n    })\\n  <\\/script>\\n复制代码\\n\")])])]),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[e._v(\"具体实现流程\")])]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"确定传递参数： url 、携带的参数 、callback;\")]),e._v(\" \"),n(\"li\",[e._v(\"处理url上的参数（？后面的）;\")]),e._v(\" \"),n(\"li\",[e._v(\"准备好url（携带callback函数）;\")]),e._v(\" \"),n(\"li\",[e._v(\"构建script标签;\")]),e._v(\" \"),n(\"li\",[e._v(\"把这个标签挂到window上\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"<script>\\n    // 1、确定好参数\\n    let jsonp = (url,data = {},callback = 'callback') => {\\n    // 2、处理好url里面的参数\\n      let dataStr = url.indexOf('?') === -1 ? '?':'&'\\n    // 3、把参数和&拼接上去\\n      for (let key in data) {\\n        dataStr += `${key}=${data[key]}&`;\\n      }\\n    // 4、把callback拼接上\\n      dataStr += 'callback=' + callback;\\n    // 5、创建一个script标签\\n      let oScript = document.createElement('script');\\n      oScript.src = url + dataStr;\\n      document.body.appendChild(oScript);\\n     // 6、把script标签挂载到window上去\\n    //方案一、\\n      // window[callback] = (data) => {\\n      //   console.log(data);\\n      // }\\n    // 方案二、\\n      return new Promise((reslove,reject) => {\\n        window[callback] = (data) => {\\n          try {\\n            reslove(data)\\n          } catch(e) {\\n            reject(e)\\n          } finally {\\n            oScript.parentNode.removeChild(oScript);\\n            //删除这个script节点\\n          }\\n        }\\n      })\\n    }\\n    //调用jsonp方法\\n    jsonp('https://photo.sina.cn/aj/index?a=1', {\\n      page: 1,\\n      cate: 'recommend'\\n    })\\n    .then(response => {\\n      console.log(response,'调用成功啦');\\n    })\\n  <\\/script>\\n复制代码\\n\")])])]),n(\"h4\",{attrs:{id:\"_3-3-4、实现一个jsonp服务器端-node版本-express版本\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-4、实现一个jsonp服务器端-node版本-express版本\"}},[e._v(\"#\")]),e._v(\" 3.3.4、实现一个jsonp服务器端？（node版本，express版本）\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"node版本\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node版本\"}},[e._v(\"#\")]),e._v(\" node版本\")]),e._v(\" \"),n(\"p\",[e._v(\"创建一个结构如下的服务器端文件夹，我们将在index.js中实现我们的JSONP：\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525593-f5432324-2aea-48c2-88df-e3c05964cd98.png#align=left&display=inline&height=203&margin=%5Bobject%20Object%5D&originHeight=203&originWidth=373&size=0&status=done&style=none&width=373\",alt:\"\"}})]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"var http = require('http');\\nhttp.createServer(function(req, res){\\n// req url  callback=?\\nconsole.log(req.url);\\nlet data = {a: 1};\\nres.writeHead(200, {'Content-type' : 'text/json'})\\n  const reg = /callback=([\\\\w]+)/\\n  if (reg.test(req.url)) {\\n    let padding = RegExp.$1\\n    res.end(`${padding}(${JSON.stringify(data)})`)\\n  } else {\\n    res.end(JSON.stringify(data));\\n  }\\n//  res.end('<p>Hello World</p>');\\n res.end(JSON.stringify(data));\\n}).listen(3000);\\n复制代码\\n\")])])]),n(\"h4\",{attrs:{id:\"express-版本\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#express-版本\"}},[e._v(\"#\")]),e._v(\" express 版本\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"var express = require('express');\\nvar cors = require('cors');//后端cors 中间件\\nconst app = express();\\napp.use(cors());\\napp.get('/product',(req,res)=>{\\n    res.json({\\n        a:1,\\n        b:2\\n    })\\n})\\napp.listen(8000,()=>{\\n    console.log('server is ok')\\n})\\n复制代码\\n\")])])]),n(\"h3\",{attrs:{id:\"_3-4-cors\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-cors\"}},[e._v(\"#\")]),e._v(\" 3.4 cors\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-4-1、介绍一下cors\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-1、介绍一下cors\"}},[e._v(\"#\")]),e._v(\" 3.4.1、介绍一下cors？\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v('CORS是一个W3C标准，全称是\"跨域资源共享\"（Cross-origin resource sharing）。它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。')])]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-4-2、简单请求和非简单请求\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-2、简单请求和非简单请求\"}},[e._v(\"#\")]),e._v(\" 3.4.2、简单请求和非简单请求？\")]),e._v(\" \"),n(\"p\",[e._v(\"浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。\\n除了简单请求其他的都是非简单请求，因此只要记住哪些是简单请求就可以啦：\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"简单请求-需要同时满足下面两种条件\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简单请求-需要同时满足下面两种条件\"}},[e._v(\"#\")]),e._v(\" 简单请求：（需要同时满足下面两种条件）\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"请求方法是以下三种方法之一：\")])]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"HEAD\")]),e._v(\" \"),n(\"li\",[e._v(\"GET\")]),e._v(\" \"),n(\"li\",[e._v(\"POST\")])]),e._v(\" \"),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[e._v(\"HTTP的头信息不超出以下几种字段：\")])]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"Accept：设置接受的内容类型（请求头）\")]),e._v(\" \"),n(\"li\",[e._v(\"Accept-Language：设置接受的语言（请求头）\")]),e._v(\" \"),n(\"li\",[e._v(\"Content-Language：为封闭内容设置自然语言或者目标用户语言（响应头）\")]),e._v(\" \"),n(\"li\",[e._v(\"Content-Type：（设置请求体的MIME类型（适用POST和PUT请求））只限于三个值\")])]),e._v(\" \"),n(\"p\",[n(\"code\",[e._v(\"application/x-www-form-urlencoded\")]),e._v(\"：\\n中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）\\n\"),n(\"code\",[e._v(\"multipart/form-data\")]),e._v(\"：将表单的数据处理为一条消息，以标签为单元，用分隔符分开。既可以上传键值对，也可以上传文件。\\n\"),n(\"code\",[e._v(\"text/plain\")]),e._v(\"：text/plain ：纯文本格式\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-4-3、项目中怎么使用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-3、项目中怎么使用\"}},[e._v(\"#\")]),e._v(\" 3.4.3、项目中怎么使用？\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"服务器端：\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const express = require('express');\\nconst app= express();\\n \\napp.get('/', (req, res)=>{\\n  console.log('server is OK');\\n  res.end('jingjing')\\n});\\n// app.use((req, res, next) => {\\n// \\tres.header(\\\"Access-Control-Allow-Origin\\\",'http://localhost:5500');\\n// \\tres.header(\\\"Access-Control-Allow-Credentials\\\", true);\\n// \\tres.header(\\\"Access-Control-Allow-Headers\\\", 'Content-Type,Content-Length,Authorization, Accept,X-Requested-With');\\n// \\tres.header(\\\"Access-Control-Allow-Methods\\\", 'PUT,POST,GET,DELETE,OPTIONS,HEAD');\\n// \\treq.method === 'OPTIONS' ? res.send('CURRENT SERVICES SUPPORT CROSS DOMAIN REQUESTS!') : next();\\n// });\\napp.listen(8081, ()=>{\\n    console.log('Server is running at http://localhost:8081')\\n})\\n复制代码\\n\")])])]),n(\"ul\",[n(\"li\",[e._v(\"前端请求：\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"<body>\\n    <button onclick=\\\"sendAjax()\\\">sendAjax</button>\\n  <script type=\\\"text/javascript\\\">\\n    var sendAjax = () => {\\n        var xhr = new XMLHttpRequest();\\n        xhr.open('GET', 'http://127.0.0.1:5500', true);\\n        xhr.send();\\n        xhr.onreadystatechange = function (e) {\\n          if (xhr.readyState == 4 && xhr.status == 200) {\\n            console.log(xhr.responseText);\\n            console.log('成功了')\\n          }\\n        };\\n    }\\n  <\\/script>\\n  </body>\\n复制代码\\n\")])])]),n(\"p\",[e._v(\"跨域报错：\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525349-c6be7ca9-88e6-4ba1-aae9-ba13030fa655.png#align=left&display=inline&height=324&margin=%5Bobject%20Object%5D&originHeight=324&originWidth=909&size=0&status=done&style=none&width=909\",alt:\"\"}}),e._v(\"\\n把中间注释的部分放开再执行：没有上面的报错了，也返回了\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"console.log(xhr.responseText);\\nconsole.log('成功了')\\n复制代码\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525520-dd68f889-2e62-4bf8-a0fd-a3c3399aa7bd.png#align=left&display=inline&height=189&margin=%5Bobject%20Object%5D&originHeight=189&originWidth=295&size=0&status=done&style=none&width=295\",alt:\"\"}}),e._v(\"\\n分析一下：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v('\"Access-Control-Allow-Origin\",'),n(\"code\",[e._v(\"http://localhost:5500\")]),e._v(\"：\")])]),e._v(\" \"),n(\"p\",[e._v(\"如果服务端仅允许来自 \"),n(\"code\",[e._v(\"http://localhost:5500\")]),e._v(\"的访问，如果服务端返回的 Access-Control-Allow-Origin: * 表明，该资源可以被任意外域访问。\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v('\"Access-Control-Allow-Credentials\", true):')])]),e._v(\" \"),n(\"p\",[e._v(\"Access-Control-Allow-Credentials 头指定了当浏览器的credentials设置为true时是否允许浏览器读取response的内容。\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"\\\"Access-Control-Allow-Headers\\\", 'Content-Type,Content-Length,Authorization, Accept,X-Requested-With'):\")])]),e._v(\" \"),n(\"p\",[e._v(\"首部字段 Access-Control-Allow-Headers 表明服务器允许请求中携带字段 X-PINGOTHER 与 Content-Type。\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"\\\"Access-Control-Allow-Methods\\\", 'PUT,POST,GET,DELETE,OPTIONS,HEAD':\")])]),e._v(\" \"),n(\"p\",[e._v(\"首部字段 Access-Control-Allow-Methods 表明服务器允许客户端使用 POST, GET 和 OPTIONS 等方法发起请求\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"req.method === 'OPTIONS' ? res.send('CURRENT SERVICES SUPPORT CROSS DOMAIN REQUESTS!') : next():\")])]),e._v(\" \"),n(\"p\",[e._v(\"“需预检的请求”要求必须首先使用 OPTIONS   方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求(除简单请求以外的，比如 POST方法就需要用到预检)\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"_3-5、代理-nginx\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-5、代理-nginx\"}},[e._v(\"#\")]),e._v(\" 3.5、代理 （nginx）\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-5-1-原理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-5-1-原理\"}},[e._v(\"#\")]),e._v(\" 3.5.1 原理\")]),e._v(\" \"),n(\"p\",[e._v(\"A网站向B网站请求1.js文件时，向B网站发送一个获取的请求，nginx根据配置文件接收这个请求，代替A网站向B网站来请求这个资源，nginx拿到这个资源后再返回给a网站，以此来解决了跨域问题。\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525461-89bfe6bf-2283-4953-afa8-9204dec49275.png#align=left&display=inline&height=501&margin=%5Bobject%20Object%5D&originHeight=501&originWidth=1153&size=0&status=done&style=none&width=1153\",alt:\"\"}})]),e._v(\" \"),n(\"h4\",{attrs:{id:\"_3-5-2-使用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-5-2-使用\"}},[e._v(\"#\")]),e._v(\" 3.5.2 使用\")]),e._v(\" \"),n(\"p\",[e._v(\"使用Nginx，有关下载和配置Nginx，我就不再这里说了，感兴趣的小伙伴可以参考一下这篇文章，里面配置相关的讲的比较清楚。\"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fblog.csdn.net%2Fenvon123%2Farticle%2Fdetails%2F83270277\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"正确的Nginx跨域配置\"),n(\"OutboundLink\")],1),e._v(\"\\n（自己平时也没怎么用就是，唉，大多知识点也是一边写一边理）\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525755-e776a318-0a68-4628-add2-96af04a3ff3f.png#align=left&display=inline&height=609&margin=%5Bobject%20Object%5D&originHeight=609&originWidth=1080&size=0&status=done&style=none&width=1080\",alt:\"\"}}),e._v(\"\\n但是的但是，学习还是要学滴。回到最开始我们提到的一些问题，来看看你能回答多少 👇👇👇\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"总结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[e._v(\"#\")]),e._v(\" 总结\")]),e._v(\" \"),n(\"p\",[e._v(\"最后再来一次拷问：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"能说说跨域吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"能说说同源策略吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"为什么要同源策略，它限制了什么？\")]),e._v(\" \"),n(\"li\",[e._v(\"你知道哪些跨域方案呢？\")]),e._v(\" \"),n(\"li\",[e._v(\"有关cookie的跨域怎么实现？\")]),e._v(\" \"),n(\"li\",[e._v(\"能具体说说JSONP吗？返回什么数据呢，前端怎么处理呢？知道什么原理吗？实现过吗？JSONP服务器端实现过吗？\")]),e._v(\" \"),n(\"li\",[e._v(\"postMessage 了解吗？怎么使用？需要注意什么？（安全方面）\")]),e._v(\" \"),n(\"li\",[e._v(\"代理了解过吗？用过哪些代理方案呢不？怎么在项目中用呢？\")]),e._v(\" \"),n(\"li\",[e._v(\"cors可以具体说一个简单请求和非简单请求吗？具体过程说一下？项目中怎么使用？\")])]),e._v(\" \"),n(\"p\",[e._v(\"🙈\\n好啦，有关跨域的就梳理到这里了\\n还好菜，继续加油吧\\n我是婧大，一个大三学崽，目前正在准备实习面试。\\n这段时间应该主要是理理一些知识点，欢迎一起学习。wx:lj18379991972 💕💕💕\\n你的点赞是给我最大的支持🤞\\n\"),n(\"img\",{attrs:{src:\"https://cdn.nlark.com/yuque/0/2021/png/12821255/1627476525502-95e197c4-6eb1-42f0-a791-f551ddcd61eb.png#align=left&display=inline&height=500&margin=%5Bobject%20Object%5D&originHeight=500&originWidth=500&size=0&status=done&style=none&width=500\",alt:\"\"}}),e._v(\"\\n【参考文献】：\\n\"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F04%2Fcors.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"跨域资源共享 CORS 详解\"),n(\"OutboundLink\")],1),e._v(\" \"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FSecurity%2FSame-origin_policy\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"浏览器的同源策略\"),n(\"OutboundLink\")],1),e._v(\" \"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fblog.csdn.net%2Fenvon123%2Farticle%2Fdetails%2F83270277\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"正确的Nginx跨域配置\"),n(\"OutboundLink\")],1),e._v(\" \"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_40650646%2Farticle%2Fdetails%2F81777398%3Futm_medium%3Ddistribute.pc_relevant.none-task-blog-2%257Edefault%257EBlogCommendFromBaidu%257Edefault-7.control%26dist_request_id%3D1328769.70653.16176908362791735%26depth_1-utm_source%3Ddistribute.pc_relevant.none-task-blog-2%257Edefault%257EBlogCommendFromBaidu%257Edefault-7.control\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"window.postMessage用法\"),n(\"OutboundLink\")],1),e._v(\" \"),n(\"a\",{attrs:{href:\"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"HTTP Headers\"),n(\"OutboundLink\")],1)]),e._v(\" \"),n(\"p\",[e._v(\"作者：jingda\\n链接：\"),n(\"a\",{attrs:{href:\"https://juejin.cn/post/6947940375008903176\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://juejin.cn/post/6947940375008903176\"),n(\"OutboundLink\")],1),e._v(\"\\n来源：掘金\\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}